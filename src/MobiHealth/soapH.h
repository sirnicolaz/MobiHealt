/* soapH.h
   Generated by gSOAP 2.7.15 from soapProxy.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || (soap_serialize_byte(soap, data), 0) || soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || (soap_serialize_int(soap, data), 0) || soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_ns1__SimplePatient
#define SOAP_TYPE_ns1__SimplePatient (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__SimplePatient(struct soap*, const char*, int, const ns1__SimplePatient *, const char*);
SOAP_FMAC3 ns1__SimplePatient * SOAP_FMAC4 soap_in_ns1__SimplePatient(struct soap*, const char*, ns1__SimplePatient *, const char*);

#define soap_write_ns1__SimplePatient(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__SimplePatient(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__SimplePatient(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__SimplePatient * SOAP_FMAC4 soap_get_ns1__SimplePatient(struct soap*, ns1__SimplePatient *, const char*, const char*);

#define soap_new_ns1__SimplePatient(soap, n) ::soap_instantiate_ns1__SimplePatient(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__SimplePatient(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__SimplePatient * SOAP_FMAC2 soap_instantiate_ns1__SimplePatient(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__SimplePatient(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_SimplePatientArray
#define SOAP_TYPE_SimplePatientArray (18)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SimplePatientArray(struct soap*, const char*, int, const SimplePatientArray *, const char*);
SOAP_FMAC3 SimplePatientArray * SOAP_FMAC4 soap_in_SimplePatientArray(struct soap*, const char*, SimplePatientArray *, const char*);

#define soap_write_SimplePatientArray(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_SimplePatientArray(soap, data) ( soap_begin_recv(soap) || !soap_get_SimplePatientArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 SimplePatientArray * SOAP_FMAC4 soap_get_SimplePatientArray(struct soap*, SimplePatientArray *, const char*, const char*);

#define soap_new_SimplePatientArray(soap, n) ::soap_instantiate_SimplePatientArray(soap, n, NULL, NULL, NULL)


#define soap_delete_SimplePatientArray(soap, p) soap_delete(soap, p)

SOAP_FMAC1 SimplePatientArray * SOAP_FMAC2 soap_instantiate_SimplePatientArray(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SimplePatientArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__TherapyReport
#define SOAP_TYPE_ns1__TherapyReport (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__TherapyReport(struct soap*, const char*, int, const ns1__TherapyReport *, const char*);
SOAP_FMAC3 ns1__TherapyReport * SOAP_FMAC4 soap_in_ns1__TherapyReport(struct soap*, const char*, ns1__TherapyReport *, const char*);

#define soap_write_ns1__TherapyReport(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__TherapyReport(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__TherapyReport(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__TherapyReport * SOAP_FMAC4 soap_get_ns1__TherapyReport(struct soap*, ns1__TherapyReport *, const char*, const char*);

#define soap_new_ns1__TherapyReport(soap, n) ::soap_instantiate_ns1__TherapyReport(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__TherapyReport(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__TherapyReport * SOAP_FMAC2 soap_instantiate_ns1__TherapyReport(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__TherapyReport(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_TherapyReportArray
#define SOAP_TYPE_TherapyReportArray (16)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_TherapyReportArray(struct soap*, const char*, int, const TherapyReportArray *, const char*);
SOAP_FMAC3 TherapyReportArray * SOAP_FMAC4 soap_in_TherapyReportArray(struct soap*, const char*, TherapyReportArray *, const char*);

#define soap_write_TherapyReportArray(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_TherapyReportArray(soap, data) ( soap_begin_recv(soap) || !soap_get_TherapyReportArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 TherapyReportArray * SOAP_FMAC4 soap_get_TherapyReportArray(struct soap*, TherapyReportArray *, const char*, const char*);

#define soap_new_TherapyReportArray(soap, n) ::soap_instantiate_TherapyReportArray(soap, n, NULL, NULL, NULL)


#define soap_delete_TherapyReportArray(soap, p) soap_delete(soap, p)

SOAP_FMAC1 TherapyReportArray * SOAP_FMAC2 soap_instantiate_TherapyReportArray(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_TherapyReportArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Anamnesi
#define SOAP_TYPE_ns1__Anamnesi (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Anamnesi(struct soap*, const char*, int, const ns1__Anamnesi *, const char*);
SOAP_FMAC3 ns1__Anamnesi * SOAP_FMAC4 soap_in_ns1__Anamnesi(struct soap*, const char*, ns1__Anamnesi *, const char*);

#define soap_write_ns1__Anamnesi(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__Anamnesi(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Anamnesi(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__Anamnesi * SOAP_FMAC4 soap_get_ns1__Anamnesi(struct soap*, ns1__Anamnesi *, const char*, const char*);

#define soap_new_ns1__Anamnesi(soap, n) ::soap_instantiate_ns1__Anamnesi(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__Anamnesi(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__Anamnesi * SOAP_FMAC2 soap_instantiate_ns1__Anamnesi(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Anamnesi(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_AnamnesiArray
#define SOAP_TYPE_AnamnesiArray (14)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_AnamnesiArray(struct soap*, const char*, int, const AnamnesiArray *, const char*);
SOAP_FMAC3 AnamnesiArray * SOAP_FMAC4 soap_in_AnamnesiArray(struct soap*, const char*, AnamnesiArray *, const char*);

#define soap_write_AnamnesiArray(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_AnamnesiArray(soap, data) ( soap_begin_recv(soap) || !soap_get_AnamnesiArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 AnamnesiArray * SOAP_FMAC4 soap_get_AnamnesiArray(struct soap*, AnamnesiArray *, const char*, const char*);

#define soap_new_AnamnesiArray(soap, n) ::soap_instantiate_AnamnesiArray(soap, n, NULL, NULL, NULL)


#define soap_delete_AnamnesiArray(soap, p) soap_delete(soap, p)

SOAP_FMAC1 AnamnesiArray * SOAP_FMAC2 soap_instantiate_AnamnesiArray(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_AnamnesiArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__MedicalReport
#define SOAP_TYPE_ns1__MedicalReport (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__MedicalReport(struct soap*, const char*, int, const ns1__MedicalReport *, const char*);
SOAP_FMAC3 ns1__MedicalReport * SOAP_FMAC4 soap_in_ns1__MedicalReport(struct soap*, const char*, ns1__MedicalReport *, const char*);

#define soap_write_ns1__MedicalReport(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__MedicalReport(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__MedicalReport(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__MedicalReport * SOAP_FMAC4 soap_get_ns1__MedicalReport(struct soap*, ns1__MedicalReport *, const char*, const char*);

#define soap_new_ns1__MedicalReport(soap, n) ::soap_instantiate_ns1__MedicalReport(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__MedicalReport(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__MedicalReport * SOAP_FMAC2 soap_instantiate_ns1__MedicalReport(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__MedicalReport(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ImageItem
#define SOAP_TYPE_ns1__ImageItem (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ImageItem(struct soap*, const char*, int, const ns1__ImageItem *, const char*);
SOAP_FMAC3 ns1__ImageItem * SOAP_FMAC4 soap_in_ns1__ImageItem(struct soap*, const char*, ns1__ImageItem *, const char*);

#define soap_write_ns1__ImageItem(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__ImageItem(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ImageItem(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__ImageItem * SOAP_FMAC4 soap_get_ns1__ImageItem(struct soap*, ns1__ImageItem *, const char*, const char*);

#define soap_new_ns1__ImageItem(soap, n) ::soap_instantiate_ns1__ImageItem(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__ImageItem(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__ImageItem * SOAP_FMAC2 soap_instantiate_ns1__ImageItem(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ImageItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ImageItemArray
#define SOAP_TYPE_ImageItemArray (11)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ImageItemArray(struct soap*, const char*, int, const ImageItemArray *, const char*);
SOAP_FMAC3 ImageItemArray * SOAP_FMAC4 soap_in_ImageItemArray(struct soap*, const char*, ImageItemArray *, const char*);

#define soap_write_ImageItemArray(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ImageItemArray(soap, data) ( soap_begin_recv(soap) || !soap_get_ImageItemArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ImageItemArray * SOAP_FMAC4 soap_get_ImageItemArray(struct soap*, ImageItemArray *, const char*, const char*);

#define soap_new_ImageItemArray(soap, n) ::soap_instantiate_ImageItemArray(soap, n, NULL, NULL, NULL)


#define soap_delete_ImageItemArray(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ImageItemArray * SOAP_FMAC2 soap_instantiate_ImageItemArray(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ImageItemArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__KeyValueObject
#define SOAP_TYPE_ns1__KeyValueObject (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__KeyValueObject(struct soap*, const char*, int, const ns1__KeyValueObject *, const char*);
SOAP_FMAC3 ns1__KeyValueObject * SOAP_FMAC4 soap_in_ns1__KeyValueObject(struct soap*, const char*, ns1__KeyValueObject *, const char*);

#define soap_write_ns1__KeyValueObject(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__KeyValueObject(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__KeyValueObject(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__KeyValueObject * SOAP_FMAC4 soap_get_ns1__KeyValueObject(struct soap*, ns1__KeyValueObject *, const char*, const char*);

#define soap_new_ns1__KeyValueObject(soap, n) ::soap_instantiate_ns1__KeyValueObject(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__KeyValueObject(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__KeyValueObject * SOAP_FMAC2 soap_instantiate_ns1__KeyValueObject(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__KeyValueObject(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_KeyValueObjectArray
#define SOAP_TYPE_KeyValueObjectArray (9)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_KeyValueObjectArray(struct soap*, const char*, int, const KeyValueObjectArray *, const char*);
SOAP_FMAC3 KeyValueObjectArray * SOAP_FMAC4 soap_in_KeyValueObjectArray(struct soap*, const char*, KeyValueObjectArray *, const char*);

#define soap_write_KeyValueObjectArray(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_KeyValueObjectArray(soap, data) ( soap_begin_recv(soap) || !soap_get_KeyValueObjectArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 KeyValueObjectArray * SOAP_FMAC4 soap_get_KeyValueObjectArray(struct soap*, KeyValueObjectArray *, const char*, const char*);

#define soap_new_KeyValueObjectArray(soap, n) ::soap_instantiate_KeyValueObjectArray(soap, n, NULL, NULL, NULL)


#define soap_delete_KeyValueObjectArray(soap, p) soap_delete(soap, p)

SOAP_FMAC1 KeyValueObjectArray * SOAP_FMAC2 soap_instantiate_KeyValueObjectArray(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_KeyValueObjectArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Anagrafica
#define SOAP_TYPE_ns1__Anagrafica (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Anagrafica(struct soap*, const char*, int, const ns1__Anagrafica *, const char*);
SOAP_FMAC3 ns1__Anagrafica * SOAP_FMAC4 soap_in_ns1__Anagrafica(struct soap*, const char*, ns1__Anagrafica *, const char*);

#define soap_write_ns1__Anagrafica(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__Anagrafica(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Anagrafica(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__Anagrafica * SOAP_FMAC4 soap_get_ns1__Anagrafica(struct soap*, ns1__Anagrafica *, const char*, const char*);

#define soap_new_ns1__Anagrafica(soap, n) ::soap_instantiate_ns1__Anagrafica(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__Anagrafica(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__Anagrafica * SOAP_FMAC2 soap_instantiate_ns1__Anagrafica(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Anagrafica(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Patient
#define SOAP_TYPE_ns1__Patient (7)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Patient(struct soap*, const char*, int, const ns1__Patient *, const char*);
SOAP_FMAC3 ns1__Patient * SOAP_FMAC4 soap_in_ns1__Patient(struct soap*, const char*, ns1__Patient *, const char*);

#define soap_write_ns1__Patient(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_ns1__Patient(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Patient(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__Patient * SOAP_FMAC4 soap_get_ns1__Patient(struct soap*, ns1__Patient *, const char*, const char*);

#define soap_new_ns1__Patient(soap, n) ::soap_instantiate_ns1__Patient(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__Patient(soap, p) soap_delete(soap, p)

SOAP_FMAC1 ns1__Patient * SOAP_FMAC2 soap_instantiate_ns1__Patient(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Patient(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) ::soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) ::soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) ::soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) ::soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) ::soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns1__searchPatient
#define SOAP_TYPE_ns1__searchPatient (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__searchPatient(struct soap*, struct ns1__searchPatient *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__searchPatient(struct soap*, const struct ns1__searchPatient *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchPatient(struct soap*, const char*, int, const struct ns1__searchPatient *, const char*);
SOAP_FMAC3 struct ns1__searchPatient * SOAP_FMAC4 soap_in_ns1__searchPatient(struct soap*, const char*, struct ns1__searchPatient *, const char*);

#define soap_write_ns1__searchPatient(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__searchPatient(soap, data), 0) || soap_put_ns1__searchPatient(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__searchPatient(struct soap*, const struct ns1__searchPatient *, const char*, const char*);

#define soap_read_ns1__searchPatient(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__searchPatient(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__searchPatient * SOAP_FMAC4 soap_get_ns1__searchPatient(struct soap*, struct ns1__searchPatient *, const char*, const char*);

#define soap_new_ns1__searchPatient(soap, n) ::soap_instantiate_ns1__searchPatient(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__searchPatient(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__searchPatient * SOAP_FMAC2 soap_instantiate_ns1__searchPatient(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__searchPatient(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__searchPatientResponse
#define SOAP_TYPE_ns1__searchPatientResponse (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__searchPatientResponse(struct soap*, struct ns1__searchPatientResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__searchPatientResponse(struct soap*, const struct ns1__searchPatientResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchPatientResponse(struct soap*, const char*, int, const struct ns1__searchPatientResponse *, const char*);
SOAP_FMAC3 struct ns1__searchPatientResponse * SOAP_FMAC4 soap_in_ns1__searchPatientResponse(struct soap*, const char*, struct ns1__searchPatientResponse *, const char*);

#define soap_write_ns1__searchPatientResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__searchPatientResponse(soap, data), 0) || soap_put_ns1__searchPatientResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__searchPatientResponse(struct soap*, const struct ns1__searchPatientResponse *, const char*, const char*);

#define soap_read_ns1__searchPatientResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__searchPatientResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__searchPatientResponse * SOAP_FMAC4 soap_get_ns1__searchPatientResponse(struct soap*, struct ns1__searchPatientResponse *, const char*, const char*);

#define soap_new_ns1__searchPatientResponse(soap, n) ::soap_instantiate_ns1__searchPatientResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__searchPatientResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__searchPatientResponse * SOAP_FMAC2 soap_instantiate_ns1__searchPatientResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__searchPatientResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__saveImage
#define SOAP_TYPE_ns1__saveImage (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__saveImage(struct soap*, struct ns1__saveImage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__saveImage(struct soap*, const struct ns1__saveImage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__saveImage(struct soap*, const char*, int, const struct ns1__saveImage *, const char*);
SOAP_FMAC3 struct ns1__saveImage * SOAP_FMAC4 soap_in_ns1__saveImage(struct soap*, const char*, struct ns1__saveImage *, const char*);

#define soap_write_ns1__saveImage(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__saveImage(soap, data), 0) || soap_put_ns1__saveImage(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__saveImage(struct soap*, const struct ns1__saveImage *, const char*, const char*);

#define soap_read_ns1__saveImage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__saveImage(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__saveImage * SOAP_FMAC4 soap_get_ns1__saveImage(struct soap*, struct ns1__saveImage *, const char*, const char*);

#define soap_new_ns1__saveImage(soap, n) ::soap_instantiate_ns1__saveImage(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__saveImage(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__saveImage * SOAP_FMAC2 soap_instantiate_ns1__saveImage(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__saveImage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__saveData
#define SOAP_TYPE_ns1__saveData (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__saveData(struct soap*, struct ns1__saveData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__saveData(struct soap*, const struct ns1__saveData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__saveData(struct soap*, const char*, int, const struct ns1__saveData *, const char*);
SOAP_FMAC3 struct ns1__saveData * SOAP_FMAC4 soap_in_ns1__saveData(struct soap*, const char*, struct ns1__saveData *, const char*);

#define soap_write_ns1__saveData(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__saveData(soap, data), 0) || soap_put_ns1__saveData(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__saveData(struct soap*, const struct ns1__saveData *, const char*, const char*);

#define soap_read_ns1__saveData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__saveData(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__saveData * SOAP_FMAC4 soap_get_ns1__saveData(struct soap*, struct ns1__saveData *, const char*, const char*);

#define soap_new_ns1__saveData(soap, n) ::soap_instantiate_ns1__saveData(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__saveData(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__saveData * SOAP_FMAC2 soap_instantiate_ns1__saveData(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__saveData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__printString
#define SOAP_TYPE_ns1__printString (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__printString(struct soap*, struct ns1__printString *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__printString(struct soap*, const struct ns1__printString *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__printString(struct soap*, const char*, int, const struct ns1__printString *, const char*);
SOAP_FMAC3 struct ns1__printString * SOAP_FMAC4 soap_in_ns1__printString(struct soap*, const char*, struct ns1__printString *, const char*);

#define soap_write_ns1__printString(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__printString(soap, data), 0) || soap_put_ns1__printString(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__printString(struct soap*, const struct ns1__printString *, const char*, const char*);

#define soap_read_ns1__printString(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__printString(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__printString * SOAP_FMAC4 soap_get_ns1__printString(struct soap*, struct ns1__printString *, const char*, const char*);

#define soap_new_ns1__printString(soap, n) ::soap_instantiate_ns1__printString(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__printString(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__printString * SOAP_FMAC2 soap_instantiate_ns1__printString(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__printString(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__printStringResponse
#define SOAP_TYPE_ns1__printStringResponse (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__printStringResponse(struct soap*, struct ns1__printStringResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__printStringResponse(struct soap*, const struct ns1__printStringResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__printStringResponse(struct soap*, const char*, int, const struct ns1__printStringResponse *, const char*);
SOAP_FMAC3 struct ns1__printStringResponse * SOAP_FMAC4 soap_in_ns1__printStringResponse(struct soap*, const char*, struct ns1__printStringResponse *, const char*);

#define soap_write_ns1__printStringResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__printStringResponse(soap, data), 0) || soap_put_ns1__printStringResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__printStringResponse(struct soap*, const struct ns1__printStringResponse *, const char*, const char*);

#define soap_read_ns1__printStringResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__printStringResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__printStringResponse * SOAP_FMAC4 soap_get_ns1__printStringResponse(struct soap*, struct ns1__printStringResponse *, const char*, const char*);

#define soap_new_ns1__printStringResponse(soap, n) ::soap_instantiate_ns1__printStringResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__printStringResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__printStringResponse * SOAP_FMAC2 soap_instantiate_ns1__printStringResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__printStringResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__hello
#define SOAP_TYPE_ns1__hello (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__hello(struct soap*, struct ns1__hello *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__hello(struct soap*, const struct ns1__hello *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__hello(struct soap*, const char*, int, const struct ns1__hello *, const char*);
SOAP_FMAC3 struct ns1__hello * SOAP_FMAC4 soap_in_ns1__hello(struct soap*, const char*, struct ns1__hello *, const char*);

#define soap_write_ns1__hello(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__hello(soap, data), 0) || soap_put_ns1__hello(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__hello(struct soap*, const struct ns1__hello *, const char*, const char*);

#define soap_read_ns1__hello(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__hello(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__hello * SOAP_FMAC4 soap_get_ns1__hello(struct soap*, struct ns1__hello *, const char*, const char*);

#define soap_new_ns1__hello(soap, n) ::soap_instantiate_ns1__hello(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__hello(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__hello * SOAP_FMAC2 soap_instantiate_ns1__hello(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__hello(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__helloResponse
#define SOAP_TYPE_ns1__helloResponse (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__helloResponse(struct soap*, struct ns1__helloResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__helloResponse(struct soap*, const struct ns1__helloResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__helloResponse(struct soap*, const char*, int, const struct ns1__helloResponse *, const char*);
SOAP_FMAC3 struct ns1__helloResponse * SOAP_FMAC4 soap_in_ns1__helloResponse(struct soap*, const char*, struct ns1__helloResponse *, const char*);

#define soap_write_ns1__helloResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__helloResponse(soap, data), 0) || soap_put_ns1__helloResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__helloResponse(struct soap*, const struct ns1__helloResponse *, const char*, const char*);

#define soap_read_ns1__helloResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__helloResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__helloResponse * SOAP_FMAC4 soap_get_ns1__helloResponse(struct soap*, struct ns1__helloResponse *, const char*, const char*);

#define soap_new_ns1__helloResponse(soap, n) ::soap_instantiate_ns1__helloResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__helloResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__helloResponse * SOAP_FMAC2 soap_instantiate_ns1__helloResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__helloResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getPatientById
#define SOAP_TYPE_ns1__getPatientById (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getPatientById(struct soap*, struct ns1__getPatientById *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getPatientById(struct soap*, const struct ns1__getPatientById *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getPatientById(struct soap*, const char*, int, const struct ns1__getPatientById *, const char*);
SOAP_FMAC3 struct ns1__getPatientById * SOAP_FMAC4 soap_in_ns1__getPatientById(struct soap*, const char*, struct ns1__getPatientById *, const char*);

#define soap_write_ns1__getPatientById(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__getPatientById(soap, data), 0) || soap_put_ns1__getPatientById(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getPatientById(struct soap*, const struct ns1__getPatientById *, const char*, const char*);

#define soap_read_ns1__getPatientById(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getPatientById(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__getPatientById * SOAP_FMAC4 soap_get_ns1__getPatientById(struct soap*, struct ns1__getPatientById *, const char*, const char*);

#define soap_new_ns1__getPatientById(soap, n) ::soap_instantiate_ns1__getPatientById(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__getPatientById(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__getPatientById * SOAP_FMAC2 soap_instantiate_ns1__getPatientById(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getPatientById(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getPatientByIdResponse
#define SOAP_TYPE_ns1__getPatientByIdResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getPatientByIdResponse(struct soap*, struct ns1__getPatientByIdResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getPatientByIdResponse(struct soap*, const struct ns1__getPatientByIdResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getPatientByIdResponse(struct soap*, const char*, int, const struct ns1__getPatientByIdResponse *, const char*);
SOAP_FMAC3 struct ns1__getPatientByIdResponse * SOAP_FMAC4 soap_in_ns1__getPatientByIdResponse(struct soap*, const char*, struct ns1__getPatientByIdResponse *, const char*);

#define soap_write_ns1__getPatientByIdResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__getPatientByIdResponse(soap, data), 0) || soap_put_ns1__getPatientByIdResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getPatientByIdResponse(struct soap*, const struct ns1__getPatientByIdResponse *, const char*, const char*);

#define soap_read_ns1__getPatientByIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getPatientByIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct ns1__getPatientByIdResponse * SOAP_FMAC4 soap_get_ns1__getPatientByIdResponse(struct soap*, struct ns1__getPatientByIdResponse *, const char*, const char*);

#define soap_new_ns1__getPatientByIdResponse(soap, n) ::soap_instantiate_ns1__getPatientByIdResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__getPatientByIdResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__getPatientByIdResponse * SOAP_FMAC2 soap_instantiate_ns1__getPatientByIdResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getPatientByIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerToSimplePatientArray
#define SOAP_TYPE_PointerToSimplePatientArray (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSimplePatientArray(struct soap*, SimplePatientArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSimplePatientArray(struct soap*, const char *, int, SimplePatientArray *const*, const char *);
SOAP_FMAC3 SimplePatientArray ** SOAP_FMAC4 soap_in_PointerToSimplePatientArray(struct soap*, const char*, SimplePatientArray **, const char*);

#define soap_write_PointerToSimplePatientArray(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSimplePatientArray(soap, data), 0) || soap_put_PointerToSimplePatientArray(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSimplePatientArray(struct soap*, SimplePatientArray *const*, const char*, const char*);

#define soap_read_PointerToSimplePatientArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSimplePatientArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 SimplePatientArray ** SOAP_FMAC4 soap_get_PointerToSimplePatientArray(struct soap*, SimplePatientArray **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__Patient
#define SOAP_TYPE_PointerTons1__Patient (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Patient(struct soap*, ns1__Patient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Patient(struct soap*, const char *, int, ns1__Patient *const*, const char *);
SOAP_FMAC3 ns1__Patient ** SOAP_FMAC4 soap_in_PointerTons1__Patient(struct soap*, const char*, ns1__Patient **, const char*);

#define soap_write_PointerTons1__Patient(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__Patient(soap, data), 0) || soap_put_PointerTons1__Patient(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Patient(struct soap*, ns1__Patient *const*, const char*, const char*);

#define soap_read_PointerTons1__Patient(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__Patient(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__Patient ** SOAP_FMAC4 soap_get_PointerTons1__Patient(struct soap*, ns1__Patient **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToPointerTons1__SimplePatient
#define SOAP_TYPE_PointerToPointerTons1__SimplePatient (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__SimplePatient(struct soap*, ns1__SimplePatient **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__SimplePatient(struct soap*, const char *, int, ns1__SimplePatient **const*, const char *);
SOAP_FMAC3 ns1__SimplePatient *** SOAP_FMAC4 soap_in_PointerToPointerTons1__SimplePatient(struct soap*, const char*, ns1__SimplePatient ***, const char*);

#define soap_write_PointerToPointerTons1__SimplePatient(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToPointerTons1__SimplePatient(soap, data), 0) || soap_put_PointerToPointerTons1__SimplePatient(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__SimplePatient(struct soap*, ns1__SimplePatient **const*, const char*, const char*);

#define soap_read_PointerToPointerTons1__SimplePatient(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTons1__SimplePatient(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__SimplePatient *** SOAP_FMAC4 soap_get_PointerToPointerTons1__SimplePatient(struct soap*, ns1__SimplePatient ***, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__SimplePatient
#define SOAP_TYPE_PointerTons1__SimplePatient (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__SimplePatient(struct soap*, ns1__SimplePatient *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__SimplePatient(struct soap*, const char *, int, ns1__SimplePatient *const*, const char *);
SOAP_FMAC3 ns1__SimplePatient ** SOAP_FMAC4 soap_in_PointerTons1__SimplePatient(struct soap*, const char*, ns1__SimplePatient **, const char*);

#define soap_write_PointerTons1__SimplePatient(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__SimplePatient(soap, data), 0) || soap_put_PointerTons1__SimplePatient(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__SimplePatient(struct soap*, ns1__SimplePatient *const*, const char*, const char*);

#define soap_read_PointerTons1__SimplePatient(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__SimplePatient(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__SimplePatient ** SOAP_FMAC4 soap_get_PointerTons1__SimplePatient(struct soap*, ns1__SimplePatient **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToPointerTons1__TherapyReport
#define SOAP_TYPE_PointerToPointerTons1__TherapyReport (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__TherapyReport(struct soap*, ns1__TherapyReport **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__TherapyReport(struct soap*, const char *, int, ns1__TherapyReport **const*, const char *);
SOAP_FMAC3 ns1__TherapyReport *** SOAP_FMAC4 soap_in_PointerToPointerTons1__TherapyReport(struct soap*, const char*, ns1__TherapyReport ***, const char*);

#define soap_write_PointerToPointerTons1__TherapyReport(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToPointerTons1__TherapyReport(soap, data), 0) || soap_put_PointerToPointerTons1__TherapyReport(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__TherapyReport(struct soap*, ns1__TherapyReport **const*, const char*, const char*);

#define soap_read_PointerToPointerTons1__TherapyReport(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTons1__TherapyReport(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__TherapyReport *** SOAP_FMAC4 soap_get_PointerToPointerTons1__TherapyReport(struct soap*, ns1__TherapyReport ***, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__TherapyReport
#define SOAP_TYPE_PointerTons1__TherapyReport (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__TherapyReport(struct soap*, ns1__TherapyReport *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__TherapyReport(struct soap*, const char *, int, ns1__TherapyReport *const*, const char *);
SOAP_FMAC3 ns1__TherapyReport ** SOAP_FMAC4 soap_in_PointerTons1__TherapyReport(struct soap*, const char*, ns1__TherapyReport **, const char*);

#define soap_write_PointerTons1__TherapyReport(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__TherapyReport(soap, data), 0) || soap_put_PointerTons1__TherapyReport(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__TherapyReport(struct soap*, ns1__TherapyReport *const*, const char*, const char*);

#define soap_read_PointerTons1__TherapyReport(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__TherapyReport(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__TherapyReport ** SOAP_FMAC4 soap_get_PointerTons1__TherapyReport(struct soap*, ns1__TherapyReport **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToPointerTons1__Anamnesi
#define SOAP_TYPE_PointerToPointerTons1__Anamnesi (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__Anamnesi(struct soap*, ns1__Anamnesi **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__Anamnesi(struct soap*, const char *, int, ns1__Anamnesi **const*, const char *);
SOAP_FMAC3 ns1__Anamnesi *** SOAP_FMAC4 soap_in_PointerToPointerTons1__Anamnesi(struct soap*, const char*, ns1__Anamnesi ***, const char*);

#define soap_write_PointerToPointerTons1__Anamnesi(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToPointerTons1__Anamnesi(soap, data), 0) || soap_put_PointerToPointerTons1__Anamnesi(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__Anamnesi(struct soap*, ns1__Anamnesi **const*, const char*, const char*);

#define soap_read_PointerToPointerTons1__Anamnesi(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTons1__Anamnesi(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__Anamnesi *** SOAP_FMAC4 soap_get_PointerToPointerTons1__Anamnesi(struct soap*, ns1__Anamnesi ***, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__Anamnesi
#define SOAP_TYPE_PointerTons1__Anamnesi (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Anamnesi(struct soap*, ns1__Anamnesi *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Anamnesi(struct soap*, const char *, int, ns1__Anamnesi *const*, const char *);
SOAP_FMAC3 ns1__Anamnesi ** SOAP_FMAC4 soap_in_PointerTons1__Anamnesi(struct soap*, const char*, ns1__Anamnesi **, const char*);

#define soap_write_PointerTons1__Anamnesi(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__Anamnesi(soap, data), 0) || soap_put_PointerTons1__Anamnesi(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Anamnesi(struct soap*, ns1__Anamnesi *const*, const char*, const char*);

#define soap_read_PointerTons1__Anamnesi(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__Anamnesi(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__Anamnesi ** SOAP_FMAC4 soap_get_PointerTons1__Anamnesi(struct soap*, ns1__Anamnesi **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToPointerTons1__ImageItem
#define SOAP_TYPE_PointerToPointerTons1__ImageItem (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__ImageItem(struct soap*, ns1__ImageItem **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__ImageItem(struct soap*, const char *, int, ns1__ImageItem **const*, const char *);
SOAP_FMAC3 ns1__ImageItem *** SOAP_FMAC4 soap_in_PointerToPointerTons1__ImageItem(struct soap*, const char*, ns1__ImageItem ***, const char*);

#define soap_write_PointerToPointerTons1__ImageItem(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToPointerTons1__ImageItem(soap, data), 0) || soap_put_PointerToPointerTons1__ImageItem(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__ImageItem(struct soap*, ns1__ImageItem **const*, const char*, const char*);

#define soap_read_PointerToPointerTons1__ImageItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTons1__ImageItem(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__ImageItem *** SOAP_FMAC4 soap_get_PointerToPointerTons1__ImageItem(struct soap*, ns1__ImageItem ***, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__ImageItem
#define SOAP_TYPE_PointerTons1__ImageItem (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ImageItem(struct soap*, ns1__ImageItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ImageItem(struct soap*, const char *, int, ns1__ImageItem *const*, const char *);
SOAP_FMAC3 ns1__ImageItem ** SOAP_FMAC4 soap_in_PointerTons1__ImageItem(struct soap*, const char*, ns1__ImageItem **, const char*);

#define soap_write_PointerTons1__ImageItem(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__ImageItem(soap, data), 0) || soap_put_PointerTons1__ImageItem(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ImageItem(struct soap*, ns1__ImageItem *const*, const char*, const char*);

#define soap_read_PointerTons1__ImageItem(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__ImageItem(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__ImageItem ** SOAP_FMAC4 soap_get_PointerTons1__ImageItem(struct soap*, ns1__ImageItem **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToPointerTons1__KeyValueObject
#define SOAP_TYPE_PointerToPointerTons1__KeyValueObject (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTons1__KeyValueObject(struct soap*, ns1__KeyValueObject **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTons1__KeyValueObject(struct soap*, const char *, int, ns1__KeyValueObject **const*, const char *);
SOAP_FMAC3 ns1__KeyValueObject *** SOAP_FMAC4 soap_in_PointerToPointerTons1__KeyValueObject(struct soap*, const char*, ns1__KeyValueObject ***, const char*);

#define soap_write_PointerToPointerTons1__KeyValueObject(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToPointerTons1__KeyValueObject(soap, data), 0) || soap_put_PointerToPointerTons1__KeyValueObject(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTons1__KeyValueObject(struct soap*, ns1__KeyValueObject **const*, const char*, const char*);

#define soap_read_PointerToPointerTons1__KeyValueObject(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToPointerTons1__KeyValueObject(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__KeyValueObject *** SOAP_FMAC4 soap_get_PointerToPointerTons1__KeyValueObject(struct soap*, ns1__KeyValueObject ***, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__KeyValueObject
#define SOAP_TYPE_PointerTons1__KeyValueObject (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__KeyValueObject(struct soap*, ns1__KeyValueObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__KeyValueObject(struct soap*, const char *, int, ns1__KeyValueObject *const*, const char *);
SOAP_FMAC3 ns1__KeyValueObject ** SOAP_FMAC4 soap_in_PointerTons1__KeyValueObject(struct soap*, const char*, ns1__KeyValueObject **, const char*);

#define soap_write_PointerTons1__KeyValueObject(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__KeyValueObject(soap, data), 0) || soap_put_PointerTons1__KeyValueObject(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__KeyValueObject(struct soap*, ns1__KeyValueObject *const*, const char*, const char*);

#define soap_read_PointerTons1__KeyValueObject(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__KeyValueObject(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__KeyValueObject ** SOAP_FMAC4 soap_get_PointerTons1__KeyValueObject(struct soap*, ns1__KeyValueObject **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToTherapyReportArray
#define SOAP_TYPE_PointerToTherapyReportArray (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToTherapyReportArray(struct soap*, TherapyReportArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToTherapyReportArray(struct soap*, const char *, int, TherapyReportArray *const*, const char *);
SOAP_FMAC3 TherapyReportArray ** SOAP_FMAC4 soap_in_PointerToTherapyReportArray(struct soap*, const char*, TherapyReportArray **, const char*);

#define soap_write_PointerToTherapyReportArray(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToTherapyReportArray(soap, data), 0) || soap_put_PointerToTherapyReportArray(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToTherapyReportArray(struct soap*, TherapyReportArray *const*, const char*, const char*);

#define soap_read_PointerToTherapyReportArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToTherapyReportArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 TherapyReportArray ** SOAP_FMAC4 soap_get_PointerToTherapyReportArray(struct soap*, TherapyReportArray **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToAnamnesiArray
#define SOAP_TYPE_PointerToAnamnesiArray (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToAnamnesiArray(struct soap*, AnamnesiArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToAnamnesiArray(struct soap*, const char *, int, AnamnesiArray *const*, const char *);
SOAP_FMAC3 AnamnesiArray ** SOAP_FMAC4 soap_in_PointerToAnamnesiArray(struct soap*, const char*, AnamnesiArray **, const char*);

#define soap_write_PointerToAnamnesiArray(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToAnamnesiArray(soap, data), 0) || soap_put_PointerToAnamnesiArray(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToAnamnesiArray(struct soap*, AnamnesiArray *const*, const char*, const char*);

#define soap_read_PointerToAnamnesiArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToAnamnesiArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 AnamnesiArray ** SOAP_FMAC4 soap_get_PointerToAnamnesiArray(struct soap*, AnamnesiArray **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__MedicalReport
#define SOAP_TYPE_PointerTons1__MedicalReport (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__MedicalReport(struct soap*, ns1__MedicalReport *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__MedicalReport(struct soap*, const char *, int, ns1__MedicalReport *const*, const char *);
SOAP_FMAC3 ns1__MedicalReport ** SOAP_FMAC4 soap_in_PointerTons1__MedicalReport(struct soap*, const char*, ns1__MedicalReport **, const char*);

#define soap_write_PointerTons1__MedicalReport(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__MedicalReport(soap, data), 0) || soap_put_PointerTons1__MedicalReport(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__MedicalReport(struct soap*, ns1__MedicalReport *const*, const char*, const char*);

#define soap_read_PointerTons1__MedicalReport(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__MedicalReport(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__MedicalReport ** SOAP_FMAC4 soap_get_PointerTons1__MedicalReport(struct soap*, ns1__MedicalReport **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToImageItemArray
#define SOAP_TYPE_PointerToImageItemArray (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToImageItemArray(struct soap*, ImageItemArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToImageItemArray(struct soap*, const char *, int, ImageItemArray *const*, const char *);
SOAP_FMAC3 ImageItemArray ** SOAP_FMAC4 soap_in_PointerToImageItemArray(struct soap*, const char*, ImageItemArray **, const char*);

#define soap_write_PointerToImageItemArray(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToImageItemArray(soap, data), 0) || soap_put_PointerToImageItemArray(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToImageItemArray(struct soap*, ImageItemArray *const*, const char*, const char*);

#define soap_read_PointerToImageItemArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToImageItemArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ImageItemArray ** SOAP_FMAC4 soap_get_PointerToImageItemArray(struct soap*, ImageItemArray **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToKeyValueObjectArray
#define SOAP_TYPE_PointerToKeyValueObjectArray (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToKeyValueObjectArray(struct soap*, KeyValueObjectArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToKeyValueObjectArray(struct soap*, const char *, int, KeyValueObjectArray *const*, const char *);
SOAP_FMAC3 KeyValueObjectArray ** SOAP_FMAC4 soap_in_PointerToKeyValueObjectArray(struct soap*, const char*, KeyValueObjectArray **, const char*);

#define soap_write_PointerToKeyValueObjectArray(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToKeyValueObjectArray(soap, data), 0) || soap_put_PointerToKeyValueObjectArray(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToKeyValueObjectArray(struct soap*, KeyValueObjectArray *const*, const char*, const char*);

#define soap_read_PointerToKeyValueObjectArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToKeyValueObjectArray(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 KeyValueObjectArray ** SOAP_FMAC4 soap_get_PointerToKeyValueObjectArray(struct soap*, KeyValueObjectArray **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTons1__Anagrafica
#define SOAP_TYPE_PointerTons1__Anagrafica (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Anagrafica(struct soap*, ns1__Anagrafica *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Anagrafica(struct soap*, const char *, int, ns1__Anagrafica *const*, const char *);
SOAP_FMAC3 ns1__Anagrafica ** SOAP_FMAC4 soap_in_PointerTons1__Anagrafica(struct soap*, const char*, ns1__Anagrafica **, const char*);

#define soap_write_PointerTons1__Anagrafica(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTons1__Anagrafica(soap, data), 0) || soap_put_PointerTons1__Anagrafica(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Anagrafica(struct soap*, ns1__Anagrafica *const*, const char*, const char*);

#define soap_read_PointerTons1__Anagrafica(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__Anagrafica(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 ns1__Anagrafica ** SOAP_FMAC4 soap_get_PointerTons1__Anagrafica(struct soap*, ns1__Anagrafica **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
