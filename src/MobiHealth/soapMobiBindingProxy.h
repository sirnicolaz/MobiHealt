/* soapMobiBindingProxy.h
   Generated by gSOAP 2.7.15 from soapProxy.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapMobiBindingProxy_H
#define soapMobiBindingProxy_H
#include "soapH.h"
class MobiBinding
{   public:
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'MobiBinding' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	MobiBinding()
	{ soap = soap_new(); endpoint = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://schema.example.com", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	/// Destructor frees deserialized data and soap engine context
	virtual ~MobiBinding() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'getPatientById' of service 'MobiBinding' and return error code (or SOAP_OK)
	virtual int ns1__getPatientById(char *id, struct ns1__getPatientByIdResponse &_param_1) { return soap ? soap_call_ns1__getPatientById(soap, endpoint, NULL, id, _param_1) : SOAP_EOM; };
	/// Invoke 'hello' of service 'MobiBinding' and return error code (or SOAP_OK)
	virtual int ns1__hello(char *&helloReturn) { return soap ? soap_call_ns1__hello(soap, endpoint, NULL, helloReturn) : SOAP_EOM; };
	/// Invoke 'printString' of service 'MobiBinding' and return error code (or SOAP_OK)
	virtual int ns1__printString(char *in, char *&printStringReturn) { return soap ? soap_call_ns1__printString(soap, endpoint, NULL, in, printStringReturn) : SOAP_EOM; };
	/// Invoke 'saveData' of service 'MobiBinding' and return error code (or SOAP_OK)
	virtual int ns1__saveData(char *patientId, char *visitCode, char *data, char *timeStamp) { return soap ? soap_send_ns1__saveData(soap, endpoint, NULL, patientId, visitCode, data, timeStamp) : SOAP_EOM; };
	/// Invoke 'saveImage' of service 'MobiBinding' and return error code (or SOAP_OK)
	virtual int ns1__saveImage(char *patientId, char *visitCode, char *base64Image, char *timeStamp) { return soap ? soap_send_ns1__saveImage(soap, endpoint, NULL, patientId, visitCode, base64Image, timeStamp) : SOAP_EOM; };
	/// Invoke 'searchPatient' of service 'MobiBinding' and return error code (or SOAP_OK)
	virtual int ns1__searchPatient(char *firstName, char *lastName, char *city, char *patientCode, struct ns1__searchPatientResponse &_param_4) { return soap ? soap_call_ns1__searchPatient(soap, endpoint, NULL, firstName, lastName, city, patientCode, _param_4) : SOAP_EOM; };
};
#endif
