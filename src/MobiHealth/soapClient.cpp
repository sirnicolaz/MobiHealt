/* soapClient.cpp
   Generated by gSOAP 2.7.15 from soapProxy.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.15 2010-04-10 13:59:06 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getPatientById(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *id, struct ns1__getPatientByIdResponse &_param_1)
{	struct ns1__getPatientById soap_tmp_ns1__getPatientById;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi";
	if (!soap_action)
		soap_action = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi&method=getPatientById";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__getPatientById.id = id;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__getPatientById(soap, &soap_tmp_ns1__getPatientById);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getPatientById(soap, &soap_tmp_ns1__getPatientById, "ns1:getPatientById", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getPatientById(soap, &soap_tmp_ns1__getPatientById, "ns1:getPatientById", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_1)
		return soap_closesock(soap);
	soap_default_ns1__getPatientByIdResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns1__getPatientByIdResponse(soap, &_param_1, "ns1:getPatientByIdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__hello(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *&helloReturn)
{	struct ns1__hello soap_tmp_ns1__hello;
	struct ns1__helloResponse *soap_tmp_ns1__helloResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi";
	if (!soap_action)
		soap_action = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi&method=hello";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__hello(soap, &soap_tmp_ns1__hello);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__hello(soap, &soap_tmp_ns1__hello, "ns1:hello", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__hello(soap, &soap_tmp_ns1__hello, "ns1:hello", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	helloReturn = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns1__helloResponse = soap_get_ns1__helloResponse(soap, NULL, "ns1:helloResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	helloReturn = soap_tmp_ns1__helloResponse->helloReturn;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__printString(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *in, char *&printStringReturn)
{	struct ns1__printString soap_tmp_ns1__printString;
	struct ns1__printStringResponse *soap_tmp_ns1__printStringResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi";
	if (!soap_action)
		soap_action = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi&method=printString";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__printString.in = in;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__printString(soap, &soap_tmp_ns1__printString);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__printString(soap, &soap_tmp_ns1__printString, "ns1:printString", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__printString(soap, &soap_tmp_ns1__printString, "ns1:printString", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	printStringReturn = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns1__printStringResponse = soap_get_ns1__printStringResponse(soap, NULL, "ns1:printStringResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	printStringReturn = soap_tmp_ns1__printStringResponse->printStringReturn;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__saveData(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *patientId, char *visitCode, char *data, char *timeStamp)
{	struct ns1__saveData soap_tmp_ns1__saveData;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi";
	if (!soap_action)
		soap_action = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi&method=saveData";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__saveData.patientId = patientId;
	soap_tmp_ns1__saveData.visitCode = visitCode;
	soap_tmp_ns1__saveData.data = data;
	soap_tmp_ns1__saveData.timeStamp = timeStamp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__saveData(soap, &soap_tmp_ns1__saveData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__saveData(soap, &soap_tmp_ns1__saveData, "ns1:saveData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__saveData(soap, &soap_tmp_ns1__saveData, "ns1:saveData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__saveData(struct soap *soap, struct ns1__saveData *_param_2)
{
	soap_default_ns1__saveData(soap, _param_2);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns1__saveData(soap, _param_2, "ns1:saveData", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_NO_METHOD;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__saveImage(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *patientId, char *visitCode, char *base64Image, char *timeStamp)
{	struct ns1__saveImage soap_tmp_ns1__saveImage;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi";
	if (!soap_action)
		soap_action = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi&method=saveImage";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__saveImage.patientId = patientId;
	soap_tmp_ns1__saveImage.visitCode = visitCode;
	soap_tmp_ns1__saveImage.base64Image = base64Image;
	soap_tmp_ns1__saveImage.timeStamp = timeStamp;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__saveImage(soap, &soap_tmp_ns1__saveImage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__saveImage(soap, &soap_tmp_ns1__saveImage, "ns1:saveImage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__saveImage(soap, &soap_tmp_ns1__saveImage, "ns1:saveImage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__saveImage(struct soap *soap, struct ns1__saveImage *_param_3)
{
	soap_default_ns1__saveImage(soap, _param_3);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns1__saveImage(soap, _param_3, "ns1:saveImage", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_NO_METHOD;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__searchPatient(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *firstName, char *lastName, char *city, char *patientCode, struct ns1__searchPatientResponse &_param_4)
{	struct ns1__searchPatient soap_tmp_ns1__searchPatient;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi";
	if (!soap_action)
		soap_action = "http://192.168.1.5:8888/mobihealth/ws/service.php?class=Mobi&method=searchPatient";
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_tmp_ns1__searchPatient.firstName = firstName;
	soap_tmp_ns1__searchPatient.lastName = lastName;
	soap_tmp_ns1__searchPatient.city = city;
	soap_tmp_ns1__searchPatient.patientCode = patientCode;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__searchPatient(soap, &soap_tmp_ns1__searchPatient);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__searchPatient(soap, &soap_tmp_ns1__searchPatient, "ns1:searchPatient", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__searchPatient(soap, &soap_tmp_ns1__searchPatient, "ns1:searchPatient", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_4)
		return soap_closesock(soap);
	soap_default_ns1__searchPatientResponse(soap, &_param_4);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_ns1__searchPatientResponse(soap, &_param_4, "ns1:searchPatientResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
